<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.github.javydreamercsw</groupId>
  <artifactId>Tournament-Manager</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Tournament Manager</name>

  <modules>
    <module>Database-Storage</module>
    <module>Elimination-Tournament</module>
    <module>MTG</module>
    <module>Swiss-Tournament</module>
    <module>TMCore</module>
    <module>TournamentManagerWeb</module>
  </modules>
  <properties>
    <netbeans.version>RELEASE270</netbeans.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <surefire.version>3.5.4</surefire.version>
    <testng.version>7.11.0</testng.version>
  </properties>
  <repositories>
    <!--
        Repository hosting NetBeans modules, especially APIs.
        Versions are based on IDE releases, e.g.: RELEASE691
        To create your own repository, use: nbm:populate-repository
        -->
    <repository>
      <id>netbeans</id>
      <name>NetBeans</name>
      <url>http://bits.netbeans.org/nexus/content/groups/netbeans/</url>
    </repository>
  </repositories>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.11.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.7</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${surefire.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${surefire.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>${surefire.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.18.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-toolchains-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <toolchains>
            <jdk>
              <version>17</version>
              <vendor>Oracle Corporation</vendor>
            </jdk>
          </toolchains>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>toolchain</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>17</source>
          <target>17</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <configuration>
          <append>true</append>
        </configuration>
        <executions>
          <!--
                        Prepares the property pointing to the JaCoCo runtime agent which
                        is passed as VM argument when Maven the Surefire plugin is executed.
                    -->
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <!-- Sets the path to the file which contains the execution data. -->
              <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
              <!--
                                Sets the name of the property containing the settings
                                for JaCoCo runtime agent.
                            -->
              <propertyName>surefireArgLine</propertyName>
            </configuration>
          </execution>
          <!--
                        Ensures that the code coverage report for unit tests is created after
                        unit tests have been run.
                    -->
          <execution>
            <id>post-unit-test</id>
            <goals>
              <goal>report</goal>
            </goals>
            <phase>test</phase>
            <configuration>
              <!-- Sets the path to the file which contains the execution data. -->
              <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
              <!-- Sets the output directory for the code coverage report. -->
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!-- Sets the VM argument line used when unit tests are run. -->
          <argLine>${surefireArgLine}</argLine>
          <!-- Skips unit tests if the value of skip.unit.tests property is true -->
          <skipTests>${skipTests}</skipTests>
          <!-- Excludes integration tests when unit tests are run. -->
          <excludes>
            <exclude>**/IT*.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <formats>
            <format>html</format>
            <format>xml</format>
          </formats>
          <check/>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>2.46.1</version>
        <configuration>
          <!-- optional: limit format enforcement to just the files changed by this feature branch
                        <ratchetFrom>origin/master</ratchetFrom>-->
          <formats>
            <!-- you can define as many formats as you want, each is independent -->
            <format>
              <!-- define the files to apply to -->
              <includes>
                <include>*.md</include>
                <include>.gitignore</include>
              </includes>
              <!-- define the steps to apply to those files -->
              <trimTrailingWhitespace/>
              <endWithNewline/>
              <indent>
                <tabs>true</tabs>
                <spacesPerTab>4</spacesPerTab>
              </indent>
            </format>
          </formats>
          <!-- define a language-specific format -->
          <java>
            <toggleOffOn/>
            <!-- no need to specify files, inferred automatically, but you can if you want -->
            <cleanthat/>
            <!-- apply a specific flavor of google-java-format and reflow long strings -->
            <googleJavaFormat>
              <version>1.27.0</version>
              <style>GOOGLE</style>
              <reflowLongStrings>true</reflowLongStrings>
            </googleJavaFormat>
            <importOrder/>
            <removeUnusedImports/>
            <formatAnnotations/>
            <!--<licenseHeader>
                              <file>${project.build.directory}/test-classes/license.template</file>
                              <delimiter>package</delimiter>
                            </licenseHeader>-->
          </java>
          <groovy>
            <!-- These are the defaults, you can override if you want -->
            <includes>
              <include>**/*.groovy</include>
            </includes>
            <importOrder/>
          </groovy>
          <pom>
            <!-- These are the defaults, you can override if you want -->
            <includes>
              <include>pom.xml</include>
            </includes>
            <sortPom>
              <encoding>UTF-8</encoding>
              <!-- The encoding of the pom files -->
              <lineSeparator>${line.separator}</lineSeparator>
              <!-- line separator to use -->
              <expandEmptyElements>false</expandEmptyElements>
              <!-- Should empty elements be expanded-->
              <spaceBeforeCloseEmptyElement>false</spaceBeforeCloseEmptyElement>
              <!-- Should a space be added inside self-closing elements-->
              <keepBlankLines>true</keepBlankLines>
              <!-- Keep empty lines -->
              <nrOfIndentSpace>2</nrOfIndentSpace>
              <!-- Indentation -->
              <indentBlankLines>false</indentBlankLines>
              <!-- Should empty lines be indented -->
              <indentSchemaLocation>false</indentSchemaLocation>
              <!-- Should schema locations be indented -->
              <predefinedSortOrder>recommended_2008_06</predefinedSortOrder>
              <!-- Sort order of elements: https://github.com/Ekryd/sortpom/wiki/PredefinedSortOrderProfiles-->
              <sortOrderFile/>
              <!-- Custom sort order of elements: https://raw.githubusercontent.com/Ekryd/sortpom/master/sorter/src/main/resources/custom_1.xml -->
              <sortDependencies/>
              <!-- Sort dependencies: https://github.com/Ekryd/sortpom/wiki/SortDependencies-->
              <sortDependencyExclusions/>
              <!-- Sort dependency exclusions: https://github.com/Ekryd/sortpom/wiki/SortDependencies-->
              <sortPlugins/>
              <!-- Sort plugins: https://github.com/Ekryd/sortpom/wiki/SortPlugins -->
              <sortProperties>true</sortProperties>
              <!-- Sort properties -->
              <sortModules>true</sortModules>
              <!-- Sort modules -->
              <sortExecutions>true</sortExecutions>
              <!-- Sort plugin executions -->
            </sortPom>
          </pom>
          <markdown>
            <includes>
              <!-- You have to set the target manually -->
              <include>**/*.md</include>
            </includes>
          </markdown>
          <json>
            <includes>
              <!-- You have to set the target manually -->
              <include>**/*.json</include>
            </includes>
            <excludes>
              <exclude>target/**</exclude>
              <exclude>node_modules/**</exclude>
              <exclude>tsconfig.json</exclude>
              <exclude>**/tsconfig.json</exclude>
              <exclude>package.json</exclude>
              <exclude>package-lock.json</exclude>
              <exclude>**/package.json</exclude>
              <exclude>**/package-lock.json</exclude>
            </excludes>
            <jackson/>
          </json>
          <typescript>
            <includes>
              <include>src/main/frontend/**/*.ts</include>
              <include>src/main/frontend/**/*.tsx</include>
            </includes>
            <excludes>
              <exclude>src/main/frontend/generated/**</exclude>
            </excludes>
          </typescript>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>compile</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <!-- Plugin para generar el site con los reports -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>summary</report>
              <report>index</report>
              <report>dependencies</report>
              <report>team</report>
              <report>licenses</report>
              <report>scm</report>
              <report>mailing-lists</report>
              <report>issue-management</report>
              <report>modules</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <!-- Report tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>
</project>
